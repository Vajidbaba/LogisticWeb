ALTER PROCEDURE [dbo].[spu_GetSearchLCTCheckListDataTable](
    @start INT,
    @length INT,
    @SearchText VARCHAR(50) = NULL,
    @sortColumn INT = NULL,
    @sortOrder VARCHAR(50) = NULL,
    @FROMDate DATE = NULL,
    @ToDate DATE = NULL,
    @ClaimNumber VARCHAR(30) = NULL,
    @IDHas VARCHAR(30) = NULL,
    @LccTpxUserId VARCHAR(30) = NULL,
    @SupervisorUsername VARCHAR(30) = NULL,
    @LCTLeadershipHandling VARCHAR(30) = NULL,
    @LogEntryType VARCHAR(30) = NULL,
    @SLPDEndDate DATE = NULL,
    @TypeOfIssue VARCHAR(30) = NULL,
    @Resolution VARCHAR(30) = NULL,
    @K250Payment VARCHAR(30) = NULL,
    @SupLogSupportUnitReview VARCHAR(50) = NULL,
    @Status INT = NULL
)
AS
BEGIN
    SET NOCOUNT ON;
    DECLARE @sql NVARCHAR(MAX);
    DECLARE @params NVARCHAR(MAX);

    SET @sql = N'
    SELECT 
        *,
        COUNT(*) OVER () AS TotalCount 
    FROM 
        (SELECT 
            L.Id, 
            L.Active, 
            L.CreatedOn, 
            L.ClaimNumber, 
            L.IDHas, 
            L.LccTpxUserId, 
            L.SupervisorUsername, 
            ISNULL(L.LCTLeadershipHandling, '''') AS LCTLeadershipHandling, 
            ISNULL(L.TypeOfIssueOtherValue, '''') AS TypeOfIssueOtherValue, 
            ISNULL(L.LogEntryType, '''') AS LogEntryType, 
            L.SLPDEndDate, 
            ISNULL(L.ResolutionOtherValue, '''') AS ResolutionOtherValue, 
            ISNULL(L.K250PaymentOtherValue, '''') AS K250PaymentOtherValue, 
            STUFF((SELECT DISTINCT '', '' + A.Name 
                    FROM LCTCheckListSupLogTypeOfIssue A 
                    WHERE A.LCTCheckListId = L.Id AND A.Active = 1 FOR XML PATH('''')), 1, 2, '''') AS SuplogTypeOfIssue, 
            STUFF((SELECT DISTINCT '', '' + A.Name 
                    FROM LCTCheckListSupLogSupportUnitReview A 
                    WHERE A.LCTCheckListId = L.Id AND A.Active = 1 FOR XML PATH('''')), 1, 2, '''') AS SupLogSupportUnitReview, 
            STUFF((SELECT DISTINCT '', '' + A.Name 
                    FROM LCTCheckListSupLogResolution A 
                    WHERE A.LCTCheckListId = L.Id AND A.Active = 1 FOR XML PATH('''')), 1, 2, '''') AS SupLogResolution, 
            STUFF((SELECT DISTINCT '', '' + A.Name 
                    FROM LCTCheckListSupLogK250Payment A 
                    WHERE A.LCTCheckListId = L.Id AND A.Active = 1 FOR XML PATH('''')), 1, 2, '''') AS SupLogK250Payment 
        FROM 
            LCTCheckListSupLog L 
        WHERE 
            L.Active = 1';

    IF @Status IS NOT NULL
        SET @sql += ' AND L.Status = @Status';

    IF @ClaimNumber IS NOT NULL
        SET @sql += ' AND L.ClaimNumber LIKE ''%'' + @ClaimNumber + ''%''';

    IF @FROMDate IS NOT NULL
        SET @sql += ' AND L.CreatedOn >= @FromDate';

    IF @ToDate IS NOT NULL
        SET @sql += ' AND L.CreatedOn < DATEADD(DAY, 1, @ToDate)';

    IF @SearchText IS NOT NULL AND @SearchText != ''
        SET @sql += ' AND (
                            L.ClaimNumber LIKE ''%'' + @SearchText + ''%'' 
                            OR L.IDHas LIKE ''%'' + @SearchText + ''%'' 
                            OR L.LccTpxUserId LIKE ''%'' + @SearchText + ''%'' 
                            OR L.SupervisorUsername LIKE ''%'' + @SearchText + ''%'' 
                            OR L.LCTLeadershipHandling LIKE ''%'' + @SearchText + ''%'' 
                            OR L.TypeOfIssueOtherValue LIKE ''%'' + @SearchText + ''%'' 
                            OR L.LogEntryType LIKE ''%'' + @SearchText + ''%'' 
                            OR L.K250PaymentOtherValue LIKE ''%'' + @SearchText + ''%'')';

    IF @SLPDEndDate IS NOT NULL
        SET @sql += ' AND L.SLPDEndDate = @SLPDEndDate';

    SET @sql += ' ) AS SubQuery';

    SET @sql += ' ORDER BY ID DESC OFFSET @start ROWS FETCH NEXT @length ROWS ONLY';

    SET @params = '@Status INT, @ClaimNumber VARCHAR(30), @FromDate DATE, @ToDate DATE, @SearchText VARCHAR(50), @SLPDEndDate DATE, @start INT, @length INT';

    EXEC sp_executesql @sql, @params, 
        @Status, @ClaimNumber, @FromDate, @ToDate, @SearchText, @SLPDEndDate, @start, @length;
END
